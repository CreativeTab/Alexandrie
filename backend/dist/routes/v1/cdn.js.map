{"version":3,"file":"cdn.js","sourceRoot":"","sources":["../../../routes/v1/cdn.ts"],"names":[],"mappings":";;;AAAA,qCAA4E;AAC5E,kFAA4D;AAC5D,0EAA0C;AAC1C,sFAAqD;AAGrD,4DAA4B;AAC5B,qDAA8C;AAC9C,MAAM,SAAS,GAAW,IAAA,gBAAM,GAAE,CAAC;AAEnC,kBAAe,CAAC,GAAQ,EAAU,EAAE;IAClC,OAAO;QACL,KAAK,EAAE,KAAK;QACZ,OAAO,EAAE,CAAC;QACV,MAAM;YACJ,SAAS,CAAC,IAAI,CACZ,QAAQ,EACR,cAAI,EACJ,oBAAS,EACT,CAAC,GAAY,EAAE,GAAa,EAAE,EAAE,CAAC,OAAO,CAAC,kBAAkB,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,EAC1E,YAAY,CACb,CAAC;YACF,OAAO,SAAS,CAAC;QACnB,CAAC;KACF,CAAC;AACJ,CAAC,CAAC;AAEF,SAAS,YAAY,CAAC,GAAQ,EAAE,CAAU,EAAE,GAAa,EAAE,IAAkB;IAC3E,IAAI,GAAG,YAAY,gBAAM,CAAC,WAAW,EAAE;QACrC,IAAI,GAAG,CAAC,IAAI,KAAK,iBAAiB;YAAE,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,IAAA,iBAAK,EAAC,yBAAyB,CAAC,CAAC,CAAC;;YAC7F,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,IAAA,iBAAK,EAAC,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC;KAC/C;IACD,IAAI,GAAG,EAAE;QACP,IAAI,GAAG,CAAC,OAAO,KAAK,gBAAgB;YAAE,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,IAAA,iBAAK,EAAC,qCAAqC,CAAC,CAAC,CAAC;QAChH,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,IAAA,iBAAK,EAAC,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC;KACjD;IACD,OAAO,IAAI,EAAE,CAAC;AAChB,CAAC","sourcesContent":["import { Router, type Request, type Response, NextFunction } from 'express';\nimport * as CDNCtrl from '../../controllers/cdn.controller';\nimport auth from '../../middlewares/auth';\nimport multerCdn from '../../middlewares/multer.cdn';\nimport type { Iroute } from '../../types';\nimport type { App } from '../../app';\nimport multer from 'multer';\nimport { error } from '../../utils/functions';\nconst CDNRouter: Router = Router();\n\nexport default (app: App): Iroute => {\n  return {\n    route: 'cdn',\n    version: 1,\n    router() {\n      CDNRouter.post(\n        '/image',\n        auth,\n        multerCdn,\n        (req: Request, res: Response) => CDNCtrl.convertImagetoWebp(app, req, res),\n        multerErrors,\n      );\n      return CDNRouter;\n    },\n  };\n};\n\nfunction multerErrors(err: any, _: Request, res: Response, next: NextFunction) {\n  if (err instanceof multer.MulterError) {\n    if (err.code === 'LIMIT_FILE_SIZE') return res.status(400).json(error('File size is too large.'));\n    else res.status(400).json(error(err.message));\n  }\n  if (err) {\n    if (err.message === '[BAD_MIMETYPE]') return res.status(400).json(error('Only images and vectors are alowed.'));\n    return res.status(400).json(error(err.message));\n  }\n  return next();\n}\n"]}